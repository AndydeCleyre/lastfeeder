---
- hosts: lastfeeder_all-in-one
  gather_facts: false
  vars_files:
    - /ansible-container/lastfm_users.yml
    - /ansible-container/lastfm_credentials.yml
    - /ansible-container/misc.yml
  vars:
    app_name: lastfeeder
    app_dir: /home/{{ app_name }}

  tasks:

  # app installation

    - name: get legacy python so ansible can do its thing
      raw: apk-install python

    - name: update package list and upgrade packages
      apk: update_cache=yes upgrade=yes

    - name: get python and other dependencies
      apk: name={{ item }}
      with_items:
        - gcc
        - libxml2-dev
        - libxslt-dev
        - musl-dev
        - python3-dev

    - name: create a user to run the script
      command: adduser -D {{ app_name }} creates=/home/{{ app_name }}

    - name: install the code
      copy: src=../{{ app_name }}/ dest={{ app_dir }} owner={{ app_name }}

    - name: get code's python package dependencies
      pip: executable=pip3 requirements={{ app_dir }}/requirements.txt

    - name: make script executable
      file: path={{ app_dir }}/lastfeeder-cli.py mode=ugo+x

    - name: install super secret credentials
      template: src=vault.py.j2 dest={{ app_dir }}/vault.py owner={{ app_name }}

    - name: install last.fm user list
      template: src=users.yml.j2 dest={{ app_dir }}/users.yml owner={{ app_name }}

  # s6 process supervision

    - name: get s6 process supervision tools
      apk: name=s6

    - name: install supervised service configurations
      template: src={{ item }}.service/run.j2 dest={{ app_dir }}/services/{{ item }}/run owner={{ app_name }} mode=ugo+x
      with_items:
        - lastfeeder
